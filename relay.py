# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'relay.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QObject, QThread, pyqtSignal
from PyQt5.QtCore import *
import socket 
import select 
import sys 
import time
from _thread import *
from threading import Thread
import logging

class Worker(QRunnable):

        #globalMessage = ""
        message = ""

        def setMessageText(self, text):
                self.message = text
        

        @pyqtSlot()
        def run(self):
                print('Starting thread...')
                def window():
                        app = QApplication(sys.argv)
                
                server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
                #if len(sys.argv) != 3: 
                #	print ("Correct usage: script, IP address, port number") 
                #	exit() 
                IP_address = "localhost" 
                Port = 8080 
                server.connect((IP_address, Port)) 

                while True: 

                        # maintains a list of possible input streams 
                        sockets_list = [sys.stdin, server] 

                        """ There are two possible input situations. Either the 
                        user wants to give manual input to send to other people, 
                        or the server is sending a message to be printed on the 
                        screen. Select returns from sockets_list, the stream that 
                        is reader for input. So for example, if the server wants 
                        to send a message, then the if condition will hold true 
                        below.If the user wants to send a message, the else 
                        condition will evaluate as true"""
                        read_sockets,write_socket, error_socket = select.select(sockets_list,[],[]) 

                        for socks in read_sockets: 
                                if socks == server: 
                                        message = socks.recv(2048) 
                                        print (message) 
                                else: 
                                        message = sys.stdin.readline()
                                        self.chatBox.setPlainText(message)
                                        #st = "Welcome"
                                        byt=message.encode()
                                        server.send(byt) 
                                        #server.send(message) 
                                        sys.stdout.write("<You>")
                                        sys.stdout.write(message) 
                                        sys.stdout.flush() 
                server.close()


class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(600, 500)
                MainWindow.setMinimumSize(QtCore.QSize(600, 500))
                MainWindow.setMaximumSize(QtCore.QSize(600, 500))
                MainWindow.setWindowOpacity(1.0)
                MainWindow.setStyleSheet("background-color: #303030;")
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                self.centralwidget.setObjectName("centralwidget")
                self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
                self.stackedWidget.setGeometry(QtCore.QRect(0, -10, 601, 481))
                self.stackedWidget.setObjectName("stackedWidget")
                self.loginPage = QtWidgets.QWidget()
                self.loginPage.setObjectName("loginPage")
                self.columnViewForm = QtWidgets.QColumnView(self.loginPage)
                self.columnViewForm.setGeometry(QtCore.QRect(200, 110, 201, 241))
                self.columnViewForm.setAutoFillBackground(False)
                self.columnViewForm.setStyleSheet("background-color: #303030;\n"
        "border-radius: 20px;\n"
        "border-color: white;\n"
        "border-style: solid;\n"
        "border-width: 1px;")
                self.columnViewForm.setFrameShadow(QtWidgets.QFrame.Sunken)
                self.columnViewForm.setObjectName("columnViewForm")
                self.appLabel = QtWidgets.QLabel(self.loginPage)
                self.appLabel.setGeometry(QtCore.QRect(250, 120, 101, 41))
                font = QtGui.QFont()
                font.setFamily("Diwan Kufi")
                font.setPointSize(36)
                self.appLabel.setFont(font)
                self.appLabel.setStyleSheet("color: #3665ff; background-color: none; ")
                self.appLabel.setAlignment(QtCore.Qt.AlignCenter)
                self.appLabel.setObjectName("appLabel")
                self.lineEditName = QtWidgets.QLineEdit(self.loginPage)
                self.lineEditName.setGeometry(QtCore.QRect(220, 190, 161, 21))
                self.lineEditName.setStyleSheet("background-color: white; \n"
        "border-radius: 5px;\n"
        "color: black;")
                self.lineEditName.setText("")
                self.lineEditName.setObjectName("lineEditName")
                self.labelName = QtWidgets.QLabel(self.loginPage)
                self.labelName.setGeometry(QtCore.QRect(220, 170, 31, 20))
                font = QtGui.QFont()
                font.setFamily("Diwan Kufi")
                font.setPointSize(11)
                self.labelName.setFont(font)
                self.labelName.setStyleSheet("color: white; background-color: none; ")
                self.labelName.setAlignment(QtCore.Qt.AlignCenter)
                self.labelName.setObjectName("labelName")
                #error label
                self.errorLabel = QtWidgets.QLabel(self.centralwidget)
                self.errorLabel.setGeometry(QtCore.QRect(220, 290, 181, 20))
                font = QtGui.QFont()
                font.setFamily("Diwan Kufi")
                font.setPointSize(13)
                self.errorLabel.setFont(font)
                self.errorLabel.setStyleSheet("color: red; background-color: none;")
                self.errorLabel.setText("")
                self.errorLabel.setAlignment(QtCore.Qt.AlignCenter)
                self.errorLabel.setObjectName("errorLabel")
                #end error lable
                self.labelUsername = QtWidgets.QLabel(self.loginPage)
                self.labelUsername.setGeometry(QtCore.QRect(220, 220, 51, 20))
                font = QtGui.QFont()
                font.setFamily("Diwan Kufi")
                font.setPointSize(11)
                self.labelUsername.setFont(font)
                self.labelUsername.setStyleSheet("color: white; background-color: none; ")
                self.labelUsername.setAlignment(QtCore.Qt.AlignCenter)
                self.labelUsername.setObjectName("labelUsername")
                self.errorLabel = QtWidgets.QLabel(self.loginPage)
                self.errorLabel.setGeometry(QtCore.QRect(210, 320, 181, 20))
                font = QtGui.QFont()
                font.setFamily("Diwan Kufi")
                font.setPointSize(13)
                self.errorLabel.setFont(font)
                self.errorLabel.setStyleSheet("color: red; background-color: none; ")
                self.errorLabel.setText("")
                self.errorLabel.setAlignment(QtCore.Qt.AlignCenter)
                self.errorLabel.setObjectName("errorLabel")
                self.pushButtonLaunch = QtWidgets.QPushButton(self.loginPage)
                self.pushButtonLaunch.setGeometry(QtCore.QRect(240, 280, 121, 32))
                font = QtGui.QFont()
                font.setFamily("Lucida Grande")
                font.setPointSize(18)
                font.setItalic(False)
                self.pushButtonLaunch.setFont(font)
                self.pushButtonLaunch.setStyleSheet("background-color: #2245b5; \n"
        "color: white; \n"
        "border-radius: 5px;\n"
        "")
                self.pushButtonLaunch.setObjectName("pushButtonLaunch")
                self.lineEditUsername = QtWidgets.QLineEdit(self.loginPage)
                self.lineEditUsername.setGeometry(QtCore.QRect(220, 240, 161, 21))
                self.lineEditUsername.setAutoFillBackground(False)
                self.lineEditUsername.setStyleSheet("background-color: white; \n"
        "border-radius: 5px;\n"
        "color: black;")
                self.lineEditUsername.setObjectName("lineEditUsername")
                self.stackedWidget.addWidget(self.loginPage)
                self.chatPage = QtWidgets.QWidget()
                self.chatPage.setObjectName("chatPage")
                self.sendButton = QtWidgets.QPushButton(self.chatPage)
                self.sendButton.setGeometry(QtCore.QRect(152, 450, 441, 32))
                self.sendButton.setStyleSheet("background-color: green; color: white;")
                self.sendButton.setObjectName("sendButton")
                
                #
                self.startClientButton = QtWidgets.QPushButton(self.chatPage)
                self.startClientButton.setGeometry(QtCore.QRect(10, 450, 131, 32))
                self.startClientButton.setStyleSheet("background-color: green; color: white;")
                self.startClientButton.setObjectName("startCleintButton")
                self.startClientButton.clicked.connect(self.runClientThread)
                #
                self.inputText = QtWidgets.QLineEdit(self.chatPage)
                self.inputText.setGeometry(QtCore.QRect(150, 420, 441, 21))
                self.inputText.setStyleSheet("background-color: white; color: black;")
                self.inputText.setObjectName("inputText")
                self.chatBox = QtWidgets.QPlainTextEdit(self.chatPage)
                self.chatBox.setGeometry(QtCore.QRect(153, 30, 441, 381))
                self.chatBox.setStyleSheet("background-color: white; color: black")
                self.chatBox.setReadOnly(True)
                self.chatBox.setPlainText("")
                self.chatBox.setObjectName("chatBox")
                self.currentUsers = QtWidgets.QPlainTextEdit(self.chatPage)
                self.currentUsers.setGeometry(QtCore.QRect(10, 30, 131, 411))
                self.currentUsers.setStyleSheet("background-color: white;")
                self.currentUsers.setReadOnly(True)
                self.currentUsers.setPlainText("")
                self.currentUsers.setObjectName("currentUsers")
                self.stackedWidget.addWidget(self.chatPage)
                MainWindow.setCentralWidget(self.centralwidget)
                self.menubar = QtWidgets.QMenuBar(MainWindow)
                self.menubar.setGeometry(QtCore.QRect(0, 0, 600, 22))
                self.menubar.setObjectName("menubar")
                MainWindow.setMenuBar(self.menubar)

                self.retranslateUi(MainWindow)
                self.stackedWidget.setCurrentIndex(0)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)

                self.pushButtonLaunch.setObjectName("pushButtonLaunch")
                self.pushButtonLaunch.clicked.connect(self.launch)
                self.sendButton.clicked.connect(self.setText)

        def setText(self):
                self.chatBox.setPlainText(self.inputText.text())
                self.threadpool(worker).setMessageText("working")
                self.inputText.setText("")
        

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "Relay"))
                self.appLabel.setText(_translate("MainWindow", "Relay"))
                self.labelName.setText(_translate("MainWindow", "name"))
                self.labelUsername.setText(_translate("MainWindow", "username"))
                self.pushButtonLaunch.setText(_translate("MainWindow", "Launch"))
                self.sendButton.setText(_translate("MainWindow", "SEND"))
                self.startClientButton.setText(_translate("MainWindow", "START CLIENT"))

        def launch(self):
                name = self.lineEditName.text()
                username = self.lineEditUsername.text()

                if (name == "" and username == ""):
                        self.errorLabel.setText("Name and Username!")
                elif (name == "" and username != ""):
                                self.errorLabel.setText("Name Required")
                elif (name != "" and username == ""):
                                self.errorLabel.setText("Username Required")
                else:
                        self.pushButtonLaunch.clicked.connect(lambda: self.stackedWidget.setCurrentWidget(self.chatPage))
                        self.threadpool = QThreadPool()
                        #self.runClientThread()
        
        def runClientThread(self):
                worker = Worker()
                self.threadpool.start(worker)
                
                 


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    #start_new_thread( MainWindow.show())
    MainWindow.show()
    sys.exit(app.exec_())
